AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Serverless API for Kashish Ecommerce platform

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    MemorySize: 512

Resources:
  ShopApi:
    Type: AWS::Serverless::Function
    Properties:
      Description: API To manage Kashish Shop actions
      CodeUri: ./src/ShopRepository/
      Handler: ShopRepository
      Runtime: dotnet8
      MemorySize: 1024
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref customerTable
        - DynamoDBCrudPolicy:
            TableName: !Ref orderTable
        - DynamoDBCrudPolicy:
            TableName: !Ref stockTable
        - DynamoDBCrudPolicy:
            TableName: !Ref stockRequestsTable
      
      Environment:
        Variables:
          ORDER_TABLE: !Ref orderTable
          CUSTOMER_TABLE: !Ref customerTable
          STOCK_TABLE: !Ref stockTable
          STOCK_REQUEST_TABLE: !Ref stockRequestsTable
          STRIPE_API_KEY: sk_test_51P8grSEvcprk3hy6Npdx7cFlHVlY0fcPofWOTBBJVCj1ZUgmIU4p3paiOaUGyKUwqNoXOb95lJf6yJ8i0v86WQC700pFzxXcsZ
          LOCAL_DB: http://host.docker.internal:8000
      Events:
        RootResource:
          PayloadFormatVersion: "2.0"
          Type: HttpApi
          Properties:
            Path: /{path+}
            Method: ANY
  
  customerTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "Id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "1"
        WriteCapacityUnits: "1"
      
      TableName: "Customers"
  
  orderTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "Id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "1"
        WriteCapacityUnits: "1"
      
      TableName: "Orders"
  
  stockTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "Id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "1"
        WriteCapacityUnits: "1"
      
      TableName: "Stock"
  
  stockRequestsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: "Id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "1"
        WriteCapacityUnits: "1"
        
      TableName: "StockRequests"

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  ShopApiEndpoint:
    Description: "Shop API Gateway Endpoint URL"
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/"
